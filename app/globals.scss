@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100;200;300;400;500;600;700;800;900&display=swap");

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  font-family: "Lexend Deca", sans-serif;
  color: #fff;
  background: #000;
}

.bg-pattern {
  background: url("/bg-pattern.png") repeat center center;
  opacity: 0.2;
}
.bg-effect {
  background: linear-gradient(
    rgba(0, 0, 0, 0.5),
    rgba(0, 0, 0, 0.4),
    rgba(0, 0, 0, 0.5)
  );
}
.bg-blur:after {
  position: absolute;
  content: "";
  width: 400vw;
  height: 400vh;
  background: transparent;
  backdrop-filter: blur(90px);
}
::selection {
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
}

* {
  scrollbar-width: thin;
  scrollbar-color: #2e2e2e #dfe9eb;
}

/* Chrome, Edge and Safari */
*::-webkit-scrollbar {
  width: 6px;
}
*::-webkit-scrollbar-track {
  border-radius: 0;
  background-color: rgba(152, 152, 152, 0.3);
}

*::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background-color: #ffffff;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.bridge-animaton {
  background-blend-mode: screen;
  animation: bridge-animaton 4s infinite linear;
}
.bridge-animaton *:nth-child(2) {
  animation: transparent 4s infinite linear;
}

@keyframes bridge-animaton {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
    width: 0;
  }
}

@keyframes transparent {
  100% {
    opacity: 0.5;
  }
}

@mixin on-circle($item-count, $circle-size, $item-size) {
  position: relative;
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg)
          translate($circle-size / 2)
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}
.circle-container {
  @include on-circle($item-count: 10, $circle-size: 20em, $item-size: 2em);
  margin: 5em auto 0;
  border: solid 5px rgb(240, 143, 126);

  img {
    display: block;
    max-width: 100%;
    border-radius: 50%;
    border: solid 5px tomato;
    transition: 0.3s;
  }
}
